---
import Card from "./Card.astro";
import type { CardProps } from "./Card.astro";

interface CarouselProps {
  title: string;
  cards: CardProps[];
}

const { title, cards } = Astro.props as CarouselProps;
---

<div class="relative overflow-hidden my-4 w-10/12 mx-auto">
  <h2 class="my-2 text-white font-bold text-3xl">{title}</h2>
  <div
    id="event-carousel"
    class="flex transition-transform duration-500 ease-in-out gap-x-4"
    data-cards={cards.length}
  >
    {
      cards.map((card) => (
        <div class="xs:min-w-full sm:min-w-1/3 lg:min-w-auto flex-shrink-0">
          <Card {...card} />
        </div>
      ))
    }
  </div>
  {
    cards.length >= 4 && (
      <>
        <button
          id="event-prevBtn"
          class="absolute left-0 top-1/2 transform -translate-y-1/2 bg-white p-2 shadow-lg"
        >
          Prev
        </button>
        <button
          id="event-nextBtn"
          class="absolute right-0 top-1/2 transform -translate-y-1/2 bg-white p-2 shadow-lg"
        >
          Next
        </button>
      </>
    )
  }
</div>

<script>
  const updateCarousel = () => {
    const carousel = document.getElementById("event-carousel")!;
    const prevBtn = document.getElementById("event-prevBtn")!;
    const nextBtn = document.getElementById("event-nextBtn")!;
    const cardCount = Number(carousel?.dataset["cards"]);
    const cardWidth = carousel!.firstElementChild!.clientWidth;
    const visibleCards = Math.floor(carousel!.clientWidth / cardWidth);

    let currentIndex = 0;

    const updateButtons = () => {
      prevBtn.style.display = currentIndex === 0 ? "none" : "block";
      nextBtn.style.display =
        currentIndex >= cardCount - visibleCards ? "none" : "block";
    };

    const moveCarousel = () => {
      carousel!.style.transform = `translateX(-${currentIndex * cardWidth}px)`;
      updateButtons();
    };

    prevBtn.addEventListener("click", () => {
      if (currentIndex > 0) {
        currentIndex--;
        moveCarousel();
      }
    });

    nextBtn.addEventListener("click", () => {
      if (currentIndex < cardCount - visibleCards) {
        currentIndex++;
        moveCarousel();
      }
    });

    moveCarousel();
  };

  window.addEventListener("resize", updateCarousel);
  updateCarousel();
</script>
