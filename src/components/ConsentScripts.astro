<script is:inline>
  // Initialize dataLayer if not already present
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }

  // Set default consent state
  gtag("consent", "default", {
    ad_storage: "denied",
    ad_user_data: "denied",
    ad_personalization: "denied",
    analytics_storage: "denied",
  });

  // Function to get cookie value by name
  function getCookie(name) {
    const match = document.cookie.match(
      new RegExp("(^| )" + name + "=([^;]+)")
    );
    return match ? match[2] : null;
  }

  // Function to set a cookie with options
  function setCookie(name, value, days) {
    const expires = days
      ? "; expires=" + new Date(Date.now() + days * 86400000).toUTCString()
      : "";
    document.cookie = `${name}=${value}; path=/;${expires}`;
  }

  // Set up event listeners for consent actions
  function setupConsentControls() {
    const cookieBanner = document.getElementById("cookie-banner");
    const acceptButton = document.getElementById("accept-button");
    const denyButton = document.getElementById("deny-button");

    const currentConsent = getCookie("cookie-consent");

    if (!currentConsent) {
      // Show banner if consent is not set
      cookieBanner.classList.remove("hidden");
    } else if (currentConsent === "granted") {
      // Apply granted consent
      gtag("consent", "update", { analytics_storage: "granted" });
    }

    acceptButton.addEventListener("click", () => {
      updateConsent("granted");
      cookieBanner.classList.add("hidden");
    });

    denyButton.addEventListener("click", () => {
      updateConsent("denied");
      cookieBanner.classList.add("hidden");
    });
  }

  // Update Google Analytics consent preferences
  function updateConsent(consent) {
    if (consent === "granted") {
      gtag("consent", "update", { analytics_storage: "granted" });
      setCookie("cookie-consent", "granted", 365);
      console.log("Consent granted");
    } else {
      gtag("consent", "update", {
        ad_storage: "denied",
        ad_user_data: "denied",
        ad_personalization: "denied",
        analytics_storage: "denied",
      });
      setCookie("cookie-consent", "denied", 365);
      console.log("Consent denied");
    }
  }

  // Initialize the script
  document.addEventListener("DOMContentLoaded", () => {
    gtag("js", new Date());
    gtag("config", "G-HSQ1FTV7S7");
    setupConsentControls();
  });
</script>
