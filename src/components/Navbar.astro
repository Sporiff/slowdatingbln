---
import MobileNavbar from "./MobileNavbar.astro";

interface Props {
  pages: PageItem[];
}

const { pages } = Astro.props;
const slugOrder = ["newsletter", "about", "lonely-hearts-ads"];
const orderedData = pages.sort((a: PageItem, b: PageItem) => {
  return slugOrder.indexOf(a.slug) - slugOrder.indexOf(b.slug);
});
---

<header class="bg-themeColor">
  <nav
    class="flex items-start flex-row lg:items-center lg:flex-col p-6 lg:px-8"
    aria-label="Global"
  >
    <div class="flex flex-1 justify-center mb-5 pl-6">
      <a href="/" class="-m-1.5 p-1.5">
        <span class="text-gray-100 text-4xl sm:text-6xl font-bold"
          >Slow Dating Berlin</span
        >
      </a>
    </div>
    <div class="flex lg:hidden justify-end pt-1 self-stretch">
      <button
        type="button"
        class="-m-2.5 rounded-md sm:pt-7 p-2.5 text-gray-100 sm:inline-flex"
        id="menu-button"
      >
        <span class="sr-only">Open main menu</span>
        <svg
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
        </svg>
      </button>
    </div>
    <div class="hidden lg:flex lg:gap-x-12">
      <a
        href="/events"
        class="text-md leading-6 text-gray-100 hover:text-gray-900">Events</a
      >
      {
        orderedData.map((page: PageItem) => (
          <a
            href={`/${page.slug}`}
            class="text-md leading-6 text-gray-100 hover:text-gray-900"
          >
            {page.title}
          </a>
        ))
      }
      <a
        href="/blog"
        class="text-md leading-6 text-gray-100 hover:text-gray-900">Blog</a
      >
    </div>
  </nav>
  <MobileNavbar {orderedData} />
</header>

<script>
  import { MobileMenuToggle } from "./utils/MobileMenuToggle";

  document.addEventListener("DOMContentLoaded", () => {
    new MobileMenuToggle("menu-button", "close-button", "mobile-menu");
  });
</script>
