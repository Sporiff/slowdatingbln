---
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";

const { slug } = Astro.params;

let response = await fetch(`${import.meta.env.GRAPHQL_ENDPOINT}`, {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({
    query: `
      {
         post(id: "${slug}", idType: SLUG) {
            author {
               node {
                  avatar {
                     url
                  }
                  email
                  name
               }
            }
            content(format: RENDERED)
            featuredImage {
               node {
                  altText
                  sourceUrl
               }
            }
            title(format: RENDERED)
         }
      }
   `,
  }),
});

export async function getStaticPaths() {
  let data = await fetch(`${import.meta.env.GRAPHQL_ENDPOINT}`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      query: `
         {
            posts(where: {categoryName: "blog"}) {
               nodes {
                  id: databaseId
                  slug
                  title(format: RENDERED)
               }
            }
         }
      `,
    }),
  });
  let posts = await data.json();
  let postList = posts.data.posts.nodes;

  return postList.map((post: any) => ({
    params: { slug: post.slug },
    props: { post: post },
  }));
}

const post = await response.json();
const postData = post.data.post;

const { featuredImage } = postData;

const imageWidth =
  featuredImage.node.mediaDetails.width < 512
    ? featuredImage.node.mediaDetails.width
    : 512;
const imageHeight =
  featuredImage.node.mediaDetails.height < 512
    ? featuredImage.node.mediaDetails.height
    : 512;
---

<Layout title={postData.title}>
  <div class="w-full flex items-center justify-center">
    <article
      class="prose-h1:text-4xl prose-h2:text-3xl prose-h3:text-2xl p-10 prose lg:prose-xl prose-a:text-blue-700 bg-white rounded-lg"
    >
      <h1 class="text-center" set:html={postData.title} />
      {
        featuredImage && (
          <div class={`max-w-[${imageWidth}px]`}>
            <Image
              alt={featuredImage.node.altText}
              src={featuredImage.node.sourceUrl}
              class="mx-auto"
              width={imageWidth}
              height={imageHeight}
            />
          </div>
        )
      }
      <Fragment set:html={postData.content} />
    </article>
  </div>
</Layout>
